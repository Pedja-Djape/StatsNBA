{"version":3,"sources":["pages/Start.js","pages/SPSC.js","pages/TPSC.js","pages/GamePrediction.js","App.js","serviceWorker.js","index.js"],"names":["Start","Component","SPSC","TPSC","Dropdown","props","state","isOpen","headerTitle","title","teams","name","id","handleClick","bind","teamID","console","log","this","className","type","data-toggle","role","map","team","href","onClick","GamePrediction","App","exact","to","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"js/main.1c1cbb8a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Start extends Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n          <h2>This is where our main page will be. </h2>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Start;","import React, { Component } from 'react';\r\n\r\nclass SPSC extends Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n          <h2>This is where our single player shot charts will be</h2>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default SPSC;","import React, { Component } from 'react';\r\n\r\nclass TPSC extends Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n          <h2>This is where our two-player shot charts will be found</h2>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default TPSC;","import React, { Component } from 'react';\r\n\r\n\r\nclass Dropdown extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  \r\n    this.state = {\r\n      isOpen: false,\r\n      headerTitle: this.props.title,\r\n      teams: [{name: 'ATL', id: 0}, {name: 'BOS', id: 1}, {name: 'CLE', id: 2}, {name: 'NOP', id: 3},\r\n      {name: 'CHI', id: 4}, {name: 'DAL', id: 5}, {name: 'DEN', id: 6}, {name: 'GSW', id: 7},\r\n      {name: 'HOU', id: 8}, {name: 'LAC', id: 9}, {name: 'LAL', id: 10}, {name: 'MIA', id: 11},\r\n      {name: 'MIL', id: 12}, {name: 'MIN', id: 13}, {name: 'BKN', id: 14}, {name: 'NYK', id: 15},\r\n      {name: 'ORL', id: 16}, {name: 'IND', id: 17}, {name: 'PHI', id: 18}, {name: 'PHX', id: 19},\r\n      {name: 'POR', id: 20}, {name: 'SAC', id: 21}, {name: 'SAS', id: 22}, {name: 'OKC', id: 23},\r\n      {name: 'TOR', id: 24}, {name: 'UTA', id: 25}, {name: 'MEM', id: 26}, {name: 'WAS', id: 27},\r\n      {name: 'DET', id: 28}, {name: 'CHA', id: 29}],\r\n    };\r\n    this.handleClick = this.handleClick.bind(this)\r\n  }\r\n  handleClick(teamID) {\r\n      // this.setState({headerTitle: 'clicked'})\r\n      // this.setState({\r\n      //   headerTitle: this.state.teams[id]\r\n      // });\r\n      console.log(this.state.teams[teamID].name);\r\n  }\r\n  // getTeamName(team){\r\n  //   return (\r\n  //     <li><a href=\"#/game-pred\" className=\"dropdown-item d-flex justify-content-center\" onClick={() => this.handleClick}>{team.name}</a></li>\r\n  //     );\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"btn-group w-100 d-flex\">\r\n        <button type=\"button\" className=\"btn-success w-100 dropdown-toggle\" data-toggle=\"dropdown\">\r\n          {this.state.headerTitle}\r\n        </button>\r\n        <ul className=\"dropdown-menu pre-scrollable w-100\" role=\"menu\">\r\n          {this.state.teams.map((team) => {\r\n            return (\r\n              <li>\r\n                <a href=\"#/game-pred\" className=\"dropdown-item d-flex justify-content-center\" onClick={() => this.handleClick(team.id)}>{team.name}</a>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass GamePrediction extends Component {\r\n  render() {\r\n    const teams = [{name: 'ATL', id: 0}, {name: 'BOS', id: 1}, {name: 'CLE', id: 2}, {name: 'NOP', id: 3},\r\n                   {name: 'CHI', id: 4}, {name: 'DAL', id: 5}, {name: 'DEN', id: 6}, {name: 'GSW', id: 7},\r\n                   {name: 'HOU', id: 8}, {name: 'LAC', id: 9}, {name: 'LAL', id: 10}, {name: 'MIA', id: 11},\r\n                   {name: 'MIL', id: 12}, {name: 'MIN', id: 13}, {name: 'BKN', id: 14}, {name: 'NYK', id: 15},\r\n                   {name: 'ORL', id: 16}, {name: 'IND', id: 17}, {name: 'PHI', id: 18}, {name: 'PHX', id: 19},\r\n                   {name: 'POR', id: 20}, {name: 'SAC', id: 21}, {name: 'SAS', id: 22}, {name: 'OKC', id: 23},\r\n                   {name: 'TOR', id: 24}, {name: 'UTA', id: 25}, {name: 'MEM', id: 26}, {name: 'WAS', id: 27},\r\n                   {name: 'DET', id: 28}, {name: 'CHA', id: 29}];\r\n    \r\n    \r\n    return (\r\n      <div className=\"button-group w-100 d-flex\">\r\n        <Dropdown title=\"Team 1\" teams={teams}/>\r\n        {/* <Dropdown title=\"Team 2\" teams={teams}/> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default GamePrediction;","import React, { Component } from 'react';\n//import './App.css';\nimport { Route, NavLink, HashRouter } from \"react-router-dom\";\nimport Start from './pages/Start'; import SPSC from './pages/SPSC'; import TPSC from './pages/TPSC'; import GamePrediction from './pages/GamePrediction';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <div>\n          <div className=\"lead d-flex justify-content-center\">\n            <h1>Welcome to my NBA STATS SPA</h1>\n          </div>\n          <div className=\"d-flex justify-content-center\">\n            <ul className=\"header\">\n              <li><NavLink exact to=\"/\">Start</NavLink> </li>\n              <li><NavLink to=\"/SPSC\">Single Player Shot Chart</NavLink> </li>\n              <li><NavLink to=\"/TPSC\">Two Player Shot Chart</NavLink> </li>\n              <li><NavLink to=\"game-pred\">Game Predictions</NavLink> </li>\n            </ul>\n          </div>\n          <div className=\"content\">\n            <Route exact path=\"/\" component={Start} />\n            <Route path=\"/SPSC\" component={SPSC} />\n            <Route path=\"/TPSC\" component={TPSC} />\n            <Route path=\"/game-pred\" component={GamePrediction} />\n          </div>\n        </div>\n      </HashRouter>  \n    );\n  }\n}\n\n//{\n  /* <div>\n  <h1>Is anyone here?</h1>\n  <enter>\n    <div class='form'>\n      <form action=\"http://localhost:5000/result\" method=\"GET\">\n        Player Name: <input type=\"text\" name='player' />\n        <input type=\"submit\" value=\"Submit Player\" />\n      </form>\n    </div>\n\n  </enter>\n</div> *///}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}